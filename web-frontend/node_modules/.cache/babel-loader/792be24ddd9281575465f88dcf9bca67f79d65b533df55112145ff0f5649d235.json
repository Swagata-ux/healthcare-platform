{"ast":null,"code":"import axios from 'axios';\nconst API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:3001';\nconst api = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }).then(res => res.data),\n  getProfile: token => api.get('/auth/me', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.data)\n};\nexport const providerService = {\n  search: (params = {}) => api.get('/providers/search', {\n    params\n  }).then(res => res.data),\n  getDetails: id => api.get(`/providers/${id}`).then(res => res.data),\n  getSlots: (serviceId, startDate, endDate) => api.get(`/providers/${serviceId}/slots`, {\n    params: {\n      start: startDate,\n      end: endDate\n    }\n  }).then(res => res.data)\n};\nexport const bookingService = {\n  create: bookingData => api.post('/bookings', bookingData).then(res => res.data),\n  getMyBookings: () => api.get('/bookings/my').then(res => res.data),\n  cancel: bookingId => api.patch(`/bookings/${bookingId}/cancel`).then(res => res.data)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authService","login","email","password","post","then","res","data","getProfile","get","providerService","search","params","getDetails","id","getSlots","serviceId","startDate","endDate","start","end","bookingService","bookingData","getMyBookings","cancel","bookingId","patch"],"sources":["/Users/swagatabanerjee/Documents/Healthcare/web-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\nconst api = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authService = {\n  login: (email, password) => \n    api.post('/auth/login', { email, password }).then(res => res.data),\n  \n  getProfile: (token) => \n    api.get('/auth/me', { headers: { Authorization: `Bearer ${token}` } }).then(res => res.data),\n};\n\nexport const providerService = {\n  search: (params = {}) => \n    api.get('/providers/search', { params }).then(res => res.data),\n  \n  getDetails: (id) => \n    api.get(`/providers/${id}`).then(res => res.data),\n  \n  getSlots: (serviceId, startDate, endDate) => \n    api.get(`/providers/${serviceId}/slots`, { \n      params: { start: startDate, end: endDate } \n    }).then(res => res.data),\n};\n\nexport const bookingService = {\n  create: (bookingData) => \n    api.post('/bookings', bookingData).then(res => res.data),\n  \n  getMyBookings: () => \n    api.get('/bookings/my').then(res => res.data),\n  \n  cancel: (bookingId) => \n    api.patch(`/bookings/${bookingId}/cancel`).then(res => res.data),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}