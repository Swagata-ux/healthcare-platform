{{- range $service := list "api-gateway" "auth-svc" "booking-svc" "provider-svc" "hr-svc" "files-svc" "ai-svc" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $service }}
  labels:
    app.kubernetes.io/name: {{ $service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/version: {{ $.Chart.AppVersion }}
    app.kubernetes.io/component: {{ $service }}
    app.kubernetes.io/part-of: healthcare-platform
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $service }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $service }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      {{- with $.Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $service }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.registry }}/{{ $.Values.image.repository }}/{{ $service }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            {{- toYaml $.Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml $.Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
          env:
            - name: NODE_ENV
              value: {{ $.Values.env.NODE_ENV }}
            - name: PORT
              value: {{ $.Values.env.PORT | quote }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.secrets.database.name }}
                  key: {{ $.Values.secrets.database.key }}
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.secrets.redis.name }}
                  key: {{ $.Values.secrets.redis.key }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.secrets.jwt.name }}
                  key: {{ $.Values.secrets.jwt.key }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-cache
              mountPath: /var/cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-cache
          emptyDir: {}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}